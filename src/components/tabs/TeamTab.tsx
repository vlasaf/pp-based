
import React, { useState } from 'react';
import { useGame, TeamMember } from '../../contexts/GameContext';

const TeamTab: React.FC = () => {
  const { team, unlockTeamMember, knowledgePoints, trustPoints, completeMission } = useGame();
  const [selectedMember, setSelectedMember] = useState<TeamMember | null>(null);
  const [showDialog, setShowDialog] = useState(false);
  const [dialogStep, setDialogStep] = useState(0);

  const handleMemberClick = (memberId: TeamMember) => {
    const member = team.find(m => m.id === memberId);
    if (member) {
      setSelectedMember(memberId);
      if (member.unlocked) {
        setShowDialog(true);
        setDialogStep(0);
      }
    }
  };

  const nextDialogStep = () => {
    if (dialogStep < getDialogForMember().length - 1) {
      setDialogStep(prev => prev + 1);
    } else {
      setShowDialog(false);
      setDialogStep(0);
      // Complete related mission if exists
      if (selectedMember === 'manager') {
        completeMission('mission-2');
      }
    }
  };

  const getDialogForMember = () => {
    if (!selectedMember) return [];
    
    const dialogs: Record<TeamMember, {speaker: string, text: string}[]> = {
      manager: [
        { speaker: '–ú–µ–Ω–µ–¥–∂–µ—Ä', text: '–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –Ω–∞—à –±–∞–Ω–∫! –†–∞–¥ –≤–∏–¥–µ—Ç—å –Ω–æ–≤–æ–≥–æ —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∞.' },
        { speaker: '–í—ã', text: '–°–ø–∞—Å–∏–±–æ! –Ø –æ—á–µ–Ω—å —Ä–∞–¥ –ø—Ä–∏—Å–æ–µ–¥–∏–Ω–∏—Ç—å—Å—è –∫ –∫–æ–º–∞–Ω–¥–µ.' },
        { speaker: '–ú–µ–Ω–µ–¥–∂–µ—Ä', text: '–í –Ω–∞—à–µ–º –±–∞–Ω–∫–µ –≤–∞–∂–Ω–æ –∑–Ω–∞—Ç—å –ø—Ä–æ–¥—É–∫—Ç—ã –∏ —É–º–µ—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å –∫–ª–∏–µ–Ω—Ç–∞–º–∏.' },
        { speaker: '–ú–µ–Ω–µ–¥–∂–µ—Ä', text: '–ò–∑—É—á–∞–π—Ç–µ –ø—Ä–æ–¥—É–∫—Ç—ã, –≤—ã–ø–æ–ª–Ω—è–π—Ç–µ –º–∏—Å—Å–∏–∏ –∏ —Ä–∞–∑–≤–∏–≤–∞–π—Ç–µ —Å–≤–æ–π –æ—Ñ–∏—Å!' },
        { speaker: '–í—ã', text: '–ë—É–¥—É —Å—Ç–∞—Ä–∞—Ç—å—Å—è! –ú–Ω–µ —É–∂–µ –Ω–µ —Ç–µ—Ä–ø–∏—Ç—Å—è –Ω–∞—á–∞—Ç—å.' },
        { speaker: '–ú–µ–Ω–µ–¥–∂–µ—Ä', text: '–û—Ç–ª–∏—á–Ω–æ! –ï—Å–ª–∏ –≤–æ–∑–Ω–∏–∫–Ω—É—Ç –≤–æ–ø—Ä–æ—Å—ã, –≤—Å–µ–≥–¥–∞ –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å –∫–æ –º–Ω–µ –∏–ª–∏ –¥—Ä—É–≥–∏–º –∫–æ–ª–ª–µ–≥–∞–º.' },
      ],
      analyst: [
        { speaker: '–ê–Ω–∞–ª–∏—Ç–∏–∫', text: '–ü—Ä–∏–≤–µ—Ç! –Ø —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–π –∞–Ω–∞–ª–∏—Ç–∏–∫ –Ω–∞—à–µ–≥–æ –±–∞–Ω–∫–∞.' },
        { speaker: '–í—ã', text: '–ü—Ä–∏–≤–µ—Ç! –ß–µ–º —Ç—ã –∑–∞–Ω–∏–º–∞–µ—à—å—Å—è?' },
        { speaker: '–ê–Ω–∞–ª–∏—Ç–∏–∫', text: '–Ø –∞–Ω–∞–ª–∏–∑–∏—Ä—É—é —Ñ–∏–Ω–∞–Ω—Å–æ–≤—ã–µ –ø–æ–∫–∞–∑–∞—Ç–µ–ª–∏ –∏ –ø–æ–º–æ–≥–∞—é –ø—Ä–∏–Ω–∏–º–∞—Ç—å –±–∏–∑–Ω–µ—Å-—Ä–µ—à–µ–Ω–∏—è.' },
        { speaker: '–ê–Ω–∞–ª–∏—Ç–∏–∫', text: '–í –±–∞–Ω–∫–æ–≤—Å–∫–æ–π —Å—Ñ–µ—Ä–µ –æ—á–µ–Ω—å –≤–∞–∂–Ω–æ —É–º–µ—Ç—å —Ä–∞–±–æ—Ç–∞—Ç—å —Å —Ü–∏—Ñ—Ä–∞–º–∏ –∏ –ø–æ–Ω–∏–º–∞—Ç—å —Ç—Ä–µ–Ω–¥—ã.' },
        { speaker: '–í—ã', text: '–ó–≤—É—á–∏—Ç –∏–Ω—Ç–µ—Ä–µ—Å–Ω–æ! –ö–∞–∫–∏–µ –Ω–∞–≤—ã–∫–∏ –Ω—É–∂–Ω—ã –¥–ª—è —Ç–∞–∫–æ–π —Ä–∞–±–æ—Ç—ã?' },
        { speaker: '–ê–Ω–∞–ª–∏—Ç–∏–∫', text: '–ê–Ω–∞–ª–∏—Ç–∏—á–µ—Å–∫–æ–µ –º—ã—à–ª–µ–Ω–∏–µ, –≤–Ω–∏–º–∞–Ω–∏–µ –∫ –¥–µ—Ç–∞–ª—è–º –∏ —Ö–æ—Ä–æ—à–µ–µ –∑–Ω–∞–Ω–∏–µ Excel –∏ SQL.' },
      ],
      mentor: [
        { speaker: '–ù–∞—Å—Ç–∞–≤–Ω–∏–∫', text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –Ø –±—É–¥—É –≤–∞—à–∏–º –Ω–∞—Å—Ç–∞–≤–Ω–∏–∫–æ–º –≤ –ø–µ—Ä–≤—ã–µ –º–µ—Å—è—Ü—ã —Ä–∞–±–æ—Ç—ã.' },
        { speaker: '–í—ã', text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –†–∞–¥ –ø–æ–∑–Ω–∞–∫–æ–º–∏—Ç—å—Å—è.' },
        { speaker: '–ù–∞—Å—Ç–∞–≤–Ω–∏–∫', text: '–ú–æ—è –∑–∞–¥–∞—á–∞ - –ø–æ–º–æ—á—å –≤–∞–º –±—ã—Å—Ç—Ä–µ–µ –∞–¥–∞–ø—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –∏ –æ—Å–≤–æ–∏—Ç—å –≤—Å–µ –ø—Ä–æ—Ü–µ—Å—Å—ã.' },
        { speaker: '–ù–∞—Å—Ç–∞–≤–Ω–∏–∫', text: '–ù–µ —Å—Ç–µ—Å–Ω—è–π—Ç–µ—Å—å –∑–∞–¥–∞–≤–∞—Ç—å –≤–æ–ø—Ä–æ—Å—ã, –¥–∞–∂–µ –µ—Å–ª–∏ –æ–Ω–∏ –∫–∞–∂—É—Ç—Å—è –ø—Ä–æ—Å—Ç—ã–º–∏.' },
        { speaker: '–í—ã', text: '–°–ø–∞—Å–∏–±–æ –∑–∞ –ø–æ–¥–¥–µ—Ä–∂–∫—É! –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ –±—É–¥—É –æ–±—Ä–∞—â–∞—Ç—å—Å—è.' },
        { speaker: '–ù–∞—Å—Ç–∞–≤–Ω–∏–∫', text: '–û—Ç–ª–∏—á–Ω–æ! –í–º–µ—Å—Ç–µ –º—ã —Å–¥–µ–ª–∞–µ–º –≤–∞—à –æ–Ω–±–æ—Ä–¥–∏–Ω–≥ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω—ã–º.' },
      ],
      accountant: [
        { speaker: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', text: '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –Ø –≥–ª–∞–≤–Ω—ã–π –±—É—Ö–≥–∞–ª—Ç–µ—Ä –Ω–∞—à–µ–≥–æ –±–∞–Ω–∫–∞.' },
        { speaker: '–í—ã', text: '–î–æ–±—Ä—ã–π –¥–µ–Ω—å! –†–∞–¥ –∑–Ω–∞–∫–æ–º—Å—Ç–≤—É.' },
        { speaker: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', text: '–í –º–æ–∏ –æ–±—è–∑–∞–Ω–Ω–æ—Å—Ç–∏ –≤—Ö–æ–¥–∏—Ç —Ñ–∏–Ω–∞–Ω—Å–æ–≤–∞—è –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç—å –∏ –∫–æ–Ω—Ç—Ä–æ–ª—å –±—é–¥–∂–µ—Ç–∞.' },
        { speaker: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', text: '–ï—Å–ª–∏ —É –≤–∞—Å –±—É–¥—É—Ç –≤–æ–ø—Ä–æ—Å—ã –ø–æ —Ä–∞—Å—á–µ—Ç—É –∑–∞—Ä–ø–ª–∞—Ç—ã –∏–ª–∏ –∫–æ–º–ø–µ–Ω—Å–∞—Ü–∏—è–º, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å.' },
        { speaker: '–í—ã', text: '–û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ! –ê –∫–∞–∫–∏–µ –æ—Ç—á–µ—Ç—ã —Å–∞–º—ã–µ –≤–∞–∂–Ω—ã–µ –¥–ª—è –±–∞–Ω–∫–∞?' },
        { speaker: '–ë—É—Ö–≥–∞–ª—Ç–µ—Ä', text: '–ë–∞–ª–∞–Ω—Å –∏ –æ—Ç—á–µ—Ç –æ –ø—Ä–∏–±—ã–ª—è—Ö –∏ —É–±—ã—Ç–∫–∞—Ö - —ç—Ç–æ –æ—Å–Ω–æ–≤–∞ —Ñ–∏–Ω–∞–Ω—Å–æ–≤–æ–π –æ—Ç—á–µ—Ç–Ω–æ—Å—Ç–∏ –±–∞–Ω–∫–∞.' },
      ],
      specialist: [
        { speaker: '–ò–ø–æ—Ç–µ—á–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', text: '–ü—Ä–∏–≤–µ—Ç—Å—Ç–≤—É—é! –Ø —Å–ø–µ—Ü–∏–∞–ª–∏–∑–∏—Ä—É—é—Å—å –Ω–∞ –∏–ø–æ—Ç–µ—á–Ω—ã—Ö –ø—Ä–æ–¥—É–∫—Ç–∞—Ö.' },
        { speaker: '–í—ã', text: '–ó–¥—Ä–∞–≤—Å—Ç–≤—É–π—Ç–µ! –ò–ø–æ—Ç–µ–∫–∞ - —ç—Ç–æ —Å–ª–æ–∂–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç?' },
        { speaker: '–ò–ø–æ—Ç–µ—á–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', text: '–ò–ø–æ—Ç–µ–∫–∞ –∏–º–µ–µ—Ç –º–Ω–æ–≥–æ –Ω—é–∞–Ω—Å–æ–≤, –Ω–æ —ç—Ç–æ –æ—á–µ–Ω—å –≤–∞–∂–Ω—ã–π –ø—Ä–æ–¥—É–∫—Ç –¥–ª—è –±–∞–Ω–∫–∞.' },
        { speaker: '–ò–ø–æ—Ç–µ—á–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', text: '–ú—ã –ø–æ–º–æ–≥–∞–µ–º –∫–ª–∏–µ–Ω—Ç–∞–º –ø—Ä–∏–æ–±—Ä–µ—Å—Ç–∏ –∂–∏–ª—å—ë - —ç—Ç–æ –±–æ–ª—å—à–∞—è –æ—Ç–≤–µ—Ç—Å—Ç–≤–µ–Ω–Ω–æ—Å—Ç—å.' },
        { speaker: '–í—ã', text: '–ö–∞–∫–∏–µ –∑–Ω–∞–Ω–∏—è –Ω—É–∂–Ω—ã –¥–ª—è —Ä–∞–±–æ—Ç—ã —Å –∏–ø–æ—Ç–µ–∫–æ–π?' },
        { speaker: '–ò–ø–æ—Ç–µ—á–Ω—ã–π —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç', text: '–ù—É–∂–Ω–æ —Ö–æ—Ä–æ—à–æ –∑–Ω–∞—Ç—å —É—Å–ª–æ–≤–∏—è –ø—Ä–æ–≥—Ä–∞–º–º, —É–º–µ—Ç—å –æ—Ü–µ–Ω–∏–≤–∞—Ç—å —Ä–∏—Å–∫–∏ –∏ —Ä–∞–±–æ—Ç–∞—Ç—å —Å –¥–æ–∫—É–º–µ–Ω—Ç–∞–º–∏.' },
      ],
    };
    
    return dialogs[selectedMember] || [];
  };

  const selectedMemberData = selectedMember 
    ? team.find(m => m.id === selectedMember) 
    : null;
  
  const dialog = getDialogForMember();
  const currentDialog = dialog[dialogStep];

  return (
    <div className="p-4 pb-16">
      {!selectedMember ? (
        <>
          <h2 className="text-xl font-bold text-center mb-6">–í–∞—à–∞ –∫–æ–º–∞–Ω–¥–∞</h2>
          <div className="grid grid-cols-2 gap-4">
            {team.map(member => (
              <div
                key={member.id}
                className={`card-product ${!member.unlocked ? 'opacity-50' : ''} ${member.unlocked ? 'animate-pulse-light' : ''}`}
                onClick={() => handleMemberClick(member.id as TeamMember)}
              >
                <div className="text-4xl mb-2">{member.icon}</div>
                <h3 className="font-semibold mb-1">{member.name}</h3>
                <div className="text-xs text-gray-600">{member.role}</div>
                {!member.unlocked && (
                  <div className="flex justify-center gap-2 mt-2 text-xs">
                    <div className="flex items-center">
                      <span className="mr-1">üìö</span>
                      <span>{member.cost.knowledge}</span>
                    </div>
                    <div className="flex items-center">
                      <span className="mr-1">‚ù§Ô∏è</span>
                      <span>{member.cost.trust}</span>
                    </div>
                  </div>
                )}
              </div>
            ))}
          </div>
        </>
      ) : showDialog ? (
        <div className="bg-white p-4 rounded-lg shadow-sm border border-border">
          <div className="flex gap-3 items-center mb-4">
            <div className="text-3xl">{selectedMemberData?.icon}</div>
            <h3 className="font-semibold">{currentDialog?.speaker}</h3>
          </div>
          <p className="mb-6 bg-bank-peach p-3 rounded-lg">{currentDialog?.text}</p>
          <button
            className="btn-primary w-full"
            onClick={nextDialogStep}
          >
            {dialogStep < dialog.length - 1 ? '–î–∞–ª–µ–µ' : '–ó–∞–≤–µ—Ä—à–∏—Ç—å'}
          </button>
        </div>
      ) : (
        <div>
          <div className="flex items-center mb-4">
            <button
              className="tap-highlight text-blue-500"
              onClick={() => setSelectedMember(null)}
            >
              ‚Üê –ù–∞–∑–∞–¥
            </button>
            <h2 className="text-xl font-bold text-center flex-1">
              {selectedMemberData?.name}
            </h2>
          </div>
          
          <div className="text-6xl text-center my-6">
            {selectedMemberData?.icon}
          </div>
          
          <div className="bg-white p-4 rounded-lg shadow-sm border border-border mb-4">
            <h3 className="font-semibold mb-2">{selectedMemberData?.role}</h3>
            <p className="text-sm">{selectedMemberData?.description}</p>
            {selectedMemberData?.unlocked ? (
              <div className="mt-2 space-y-1 text-sm">
                {selectedMemberData.knowledgeBonus > 0 && (
                  <div>–ë–æ–Ω—É—Å –∑–Ω–∞–Ω–∏–π: +{selectedMemberData.knowledgeBonus} –∫ –ø—Ä–æ–¥—É–∫—Ç–∞–º</div>
                )}
                {selectedMemberData.trustBonus > 0 && (
                  <div>–ë–æ–Ω—É—Å –¥–æ–≤–µ—Ä–∏—è: +{selectedMemberData.trustBonus} –∫ –º–∏—Å—Å–∏—è–º</div>
                )}
              </div>
            ) : (
              <div className="flex justify-center gap-4 mt-3">
                <div className="flex items-center">
                  <span className="mr-1">üìö</span>
                  <span>{selectedMemberData?.cost.knowledge}</span>
                </div>
                <div className="flex items-center">
                  <span className="mr-1">‚ù§Ô∏è</span>
                  <span>{selectedMemberData?.cost.trust}</span>
                </div>
              </div>
            )}
          </div>
          
          {selectedMemberData?.unlocked ? (
            <button
              className="btn-primary w-full"
              onClick={() => setShowDialog(true)}
            >
              –ü–æ–≥–æ–≤–æ—Ä–∏—Ç—å
            </button>
          ) : (
            <button
              className={`btn-primary w-full ${
                knowledgePoints < (selectedMemberData?.cost.knowledge || 0) || 
                trustPoints < (selectedMemberData?.cost.trust || 0)
                  ? 'opacity-50'
                  : ''
              }`}
              disabled={
                knowledgePoints < (selectedMemberData?.cost.knowledge || 0) || 
                trustPoints < (selectedMemberData?.cost.trust || 0)
              }
              onClick={() => selectedMember && unlockTeamMember(selectedMember)}
            >
              –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å
            </button>
          )}
        </div>
      )}
    </div>
  );
};

export default TeamTab;
